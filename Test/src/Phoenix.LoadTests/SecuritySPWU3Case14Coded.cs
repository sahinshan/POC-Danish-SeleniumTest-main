//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Phoenix.LoadTests
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Microsoft.SystemCenter.Cloud.GsmPlugins;


    [IncludeDeclarativeWebTest("Security.SPWU3.Login14", "..\\..\\security\\sharing provider with user3\\login\\security.spwu3.login14.webtest", "0eea718f-0183-4083-9913-9ad19c14a877")]
    public class SecuritySPWU3Case14Coded : WebTest
    {

        private GuidGeneratorWebTestPlugin testPlugin0 = new GuidGeneratorWebTestPlugin();

        public SecuritySPWU3Case14Coded()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
            this.testPlugin0.ContextParameterName = "RandomGuid";
            this.testPlugin0.OutputFormat = "";
            this.PreWebTest += new EventHandler<PreWebTestEventArgs>(this.testPlugin0.PreWebTest);
            this.PostWebTest += new EventHandler<PostWebTestEventArgs>(this.testPlugin0.PostWebTest);
            this.PreTransaction += new EventHandler<PreTransactionEventArgs>(this.testPlugin0.PreTransaction);
            this.PostTransaction += new EventHandler<PostTransactionEventArgs>(this.testPlugin0.PostTransaction);
            this.PrePage += new EventHandler<PrePageEventArgs>(this.testPlugin0.PrePage);
            this.PostPage += new EventHandler<PostPageEventArgs>(this.testPlugin0.PostPage);
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }
            this.PreRequestDataBinding += new EventHandler<PreRequestDataBindingEventArgs>(this.testPlugin0.PreRequestDataBinding);
            this.PreRequest += new EventHandler<PreRequestEventArgs>(this.testPlugin0.PreRequest);
            this.PostRequest += new EventHandler<PostRequestEventArgs>(this.testPlugin0.PostRequest);

            foreach (WebTestRequest r in IncludeWebTest("Security.SPWU3.Login14", false)) { yield return r; };

            WebTestRequest request1 = new WebTestRequest("https://phoenixqa.careworks.ie/pages/default.aspx");
            request1.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/login.aspx"));
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule3 = new ValidateHtmlTagInnerText();
                validationRule3.TagName = "a";
                validationRule3.AttributeName = "class";
                validationRule3.AttributeValue = "nav-link text-light dropdown-toggle";
                validationRule3.ExpectedInnerText = "Workplace";
                validationRule3.RemoveInnerTags = true;
                validationRule3.HasClosingTags = true;
                validationRule3.CollapseWhiteSpace = true;
                validationRule3.Index = -1;
                validationRule3.IgnoreCase = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule3.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule4 = new ValidateHtmlTagInnerText();
                validationRule4.TagName = "span";
                validationRule4.AttributeName = "title";
                validationRule4.AttributeValue = "My Work";
                validationRule4.ExpectedInnerText = "My Work";
                validationRule4.RemoveInnerTags = true;
                validationRule4.HasClosingTags = true;
                validationRule4.CollapseWhiteSpace = true;
                validationRule4.Index = -1;
                validationRule4.IgnoreCase = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule4.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule5 = new ValidationRuleFindText();
                validationRule5.FindText = ">Providers</a>";
                validationRule5.IgnoreCase = true;
                validationRule5.UseRegularExpression = false;
                validationRule5.PassIfTextFound = true;
                request1.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule5.Validate);
            }
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("https://phoenixqa.careworks.ie/pages/listpage.aspx");
            request2.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/default.aspx"));
            request2.QueryStringParameters.Add("type", "provider", false, false);
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule6 = new ValidateHtmlTagInnerText();
                validationRule6.TagName = "h1";
                validationRule6.AttributeName = "class";
                validationRule6.AttributeValue = "col-sm-5";
                validationRule6.ExpectedInnerText = "Providers";
                validationRule6.RemoveInnerTags = true;
                validationRule6.HasClosingTags = true;
                validationRule6.CollapseWhiteSpace = true;
                validationRule6.Index = -1;
                validationRule6.IgnoreCase = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule6.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule7 = new ValidationRuleFindText();
                validationRule7.FindText = "id=\"TI_NewRecordButton\"";
                validationRule7.IgnoreCase = true;
                validationRule7.UseRegularExpression = false;
                validationRule7.PassIfTextFound = false;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule7.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule8 = new ValidationRuleFindText();
                validationRule8.FindText = "Menu</button>";
                validationRule8.IgnoreCase = true;
                validationRule8.UseRegularExpression = false;
                validationRule8.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule8.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule9 = new ValidationRuleFindText();
                validationRule9.FindText = "id=\"TI_ExportToExcelButton\"";
                validationRule9.IgnoreCase = true;
                validationRule9.UseRegularExpression = false;
                validationRule9.PassIfTextFound = false;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule9.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule10 = new ValidationRuleFindText();
                validationRule10.FindText = "id=\"TI_MailMergeButton\"";
                validationRule10.IgnoreCase = true;
                validationRule10.UseRegularExpression = false;
                validationRule10.PassIfTextFound = false;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule10.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule11 = new ValidationRuleFindText();
                validationRule11.FindText = "id=\"TI_AssignRecordButton\"";
                validationRule11.IgnoreCase = true;
                validationRule11.UseRegularExpression = false;
                validationRule11.PassIfTextFound = false;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule11.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule12 = new ValidationRuleFindText();
                validationRule12.FindText = "id=\"TI_DeleteRecordButton\"";
                validationRule12.IgnoreCase = true;
                validationRule12.UseRegularExpression = false;
                validationRule12.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule12.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule13 = new ValidationRuleFindText();
                validationRule13.FindText = "<input name=\"CWQuickSearch\" type=\"text\" id=\"CWQuickSearch\"";
                validationRule13.IgnoreCase = true;
                validationRule13.UseRegularExpression = false;
                validationRule13.PassIfTextFound = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule13.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule14 = new ValidateHtmlTagInnerText();
                validationRule14.TagName = "button";
                validationRule14.AttributeName = "id";
                validationRule14.AttributeValue = "CWQuickSearchButton";
                validationRule14.ExpectedInnerText = "Search";
                validationRule14.RemoveInnerTags = true;
                validationRule14.HasClosingTags = true;
                validationRule14.CollapseWhiteSpace = true;
                validationRule14.Index = -1;
                validationRule14.IgnoreCase = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule14.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule15 = new ValidateHtmlTagInnerText();
                validationRule15.TagName = "button";
                validationRule15.AttributeName = "id";
                validationRule15.AttributeValue = "CWRefreshButton";
                validationRule15.ExpectedInnerText = "Refresh";
                validationRule15.RemoveInnerTags = true;
                validationRule15.HasClosingTags = true;
                validationRule15.CollapseWhiteSpace = true;
                validationRule15.Index = -1;
                validationRule15.IgnoreCase = true;
                request2.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule15.Validate);
            }
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("https://phoenixqa.careworks.ie/api/businessdataview/RetrieveDataViews");
            request3.Method = "POST";
            request3.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request3.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request3.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/listpage.aspx?type=provider"));
            StringHttpBody request3Body = new StringHttpBody();
            request3Body.ContentType = "application/json; charset=utf-8";
            request3Body.InsertByteOrderMark = false;
            request3Body.BodyString = "{\"BusinessObjectId\":\"a79a6e77-ea7e-e411-a2de-005056c00008\",\"ViewType\":\"1\"}";
            request3.Body = request3Body;
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule16 = new ValidationRuleFindText();
                validationRule16.FindText = "\"Success\":true";
                validationRule16.IgnoreCase = true;
                validationRule16.UseRegularExpression = false;
                validationRule16.PassIfTextFound = true;
                request3.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule16.Validate);
            }
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("https://phoenixqa.careworks.ie/api/businessdataview/RetrieveResults");
            request4.ThinkTime = 13;
            request4.Method = "POST";
            request4.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request4.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request4.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/listpage.aspx?type=provider"));
            StringHttpBody request4Body = new StringHttpBody();
            request4Body.ContentType = "application/json; charset=utf-8";
            request4Body.InsertByteOrderMark = false;
            request4Body.BodyString = @"{""SearchText"":"""",""CurrentPage"":""1"",""SortOptions"":"""",""CurrentViewId"":""2d153db4-239a-e811-9be8-989096c9be3d"",""TypeName"":""provider"",""ParentId"":"""",""ParentTypeName"":"""",""SearchViewId"":"""",""SearchViewDisplayName"":"""",""RelationshipId"":"""",""BusinessObjectId"":""a79a6e77-ea7e-e411-a2de-005056c00008"",""RecordsPerPage"":""100"",""ViewType"":""1"",""ParentIdFieldName"":"""",""AllowMultiSelect"":""true"",""OtherIdField"":"""",""ViewGroup"":""1"",""PagingInfo"":"""",""DataQueryXml"":null}";
            request4.Body = request4Body;
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule17 = new ValidationRuleFindText();
                validationRule17.FindText = "Security Test Provider 3";
                validationRule17.IgnoreCase = true;
                validationRule17.UseRegularExpression = false;
                validationRule17.PassIfTextFound = true;
                request4.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule17.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule18 = new ValidationRuleFindText();
                validationRule18.FindText = "\"Success\":true";
                validationRule18.IgnoreCase = true;
                validationRule18.UseRegularExpression = false;
                validationRule18.PassIfTextFound = true;
                request4.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule18.Validate);
            }
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("https://phoenixqa.careworks.ie/api/businessdataview/RetrieveResults");
            request5.Method = "POST";
            request5.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request5.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request5.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/listpage.aspx?type=provider"));
            StringHttpBody request5Body = new StringHttpBody();
            request5Body.ContentType = "application/json; charset=utf-8";
            request5Body.InsertByteOrderMark = false;
            request5Body.BodyString = @"{""SearchText"":"""",""CurrentPage"":""1"",""SortOptions"":"""",""CurrentViewId"":""fa9a6e77-ea7e-e411-a2de-005056c00008"",""TypeName"":""provider"",""ParentId"":"""",""ParentTypeName"":"""",""SearchViewId"":"""",""SearchViewDisplayName"":"""",""RelationshipId"":"""",""BusinessObjectId"":""a79a6e77-ea7e-e411-a2de-005056c00008"",""RecordsPerPage"":""100"",""ViewType"":""1"",""ParentIdFieldName"":"""",""AllowMultiSelect"":""true"",""OtherIdField"":"""",""ViewGroup"":""1"",""PagingInfo"":""{\""pn\"":1,\""Pages\"":[{\""pn\"":1,\""ta\"":\""PROVIDER\"",\""fn\"":\""name\"",\""dt\"":12,\""sv\"":\""czxczxc\""},{\""pn\"":1,\""ta\"":\""PROVIDER\"",\""fn\"":\""providerid\"",\""dt\"":14,\""gv\"":\""66f993ea-ff9a-e811-9be8-989096c9be3d\""}]}"",""DataQueryXml"":null}";
            request5.Body = request5Body;
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule19 = new ValidationRuleFindText();
                validationRule19.FindText = "Security Test Provider 3";
                validationRule19.IgnoreCase = true;
                validationRule19.UseRegularExpression = false;
                validationRule19.PassIfTextFound = true;
                request5.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule19.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule20 = new ValidationRuleFindText();
                validationRule20.FindText = "\"Success\":true";
                validationRule20.IgnoreCase = true;
                validationRule20.UseRegularExpression = false;
                validationRule20.PassIfTextFound = true;
                request5.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule20.Validate);
            }
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest("https://phoenixqa.careworks.ie/pages/editpage.aspx");
            request6.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/listpage.aspx?type=provider"));
            request6.QueryStringParameters.Add("type", "provider", false, false);
            request6.QueryStringParameters.Add("id", "50fc1b5a-3fb7-e811-80dc-0050560502cc", false, false);
            request6.QueryStringParameters.Add("dialogdepth", "1", false, false);
            request6.QueryStringParameters.Add("winmode", "1", false, false);
            request6.QueryStringParameters.Add("dialogname", "CWDataFormDialog", false, false);
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule21 = new ValidationRuleFindText();
                validationRule21.FindText = "id=\"TI_SaveButton\"";
                validationRule21.IgnoreCase = true;
                validationRule21.UseRegularExpression = false;
                validationRule21.PassIfTextFound = false;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule21.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule22 = new ValidationRuleFindText();
                validationRule22.FindText = ">Save</button>";
                validationRule22.IgnoreCase = true;
                validationRule22.UseRegularExpression = false;
                validationRule22.PassIfTextFound = false;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule22.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule23 = new ValidationRuleFindText();
                validationRule23.FindText = "id=\"TI_SaveAndCloseButton\"";
                validationRule23.IgnoreCase = true;
                validationRule23.UseRegularExpression = false;
                validationRule23.PassIfTextFound = false;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule23.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule24 = new ValidationRuleFindText();
                validationRule24.FindText = "onclick=\"CW.DataForm.SaveAndClose();\">Save & Close</button>";
                validationRule24.IgnoreCase = true;
                validationRule24.UseRegularExpression = false;
                validationRule24.PassIfTextFound = false;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule24.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule25 = new ValidateHtmlTagInnerText();
                validationRule25.TagName = "h1";
                validationRule25.AttributeName = "title";
                validationRule25.AttributeValue = "Provider: Security Test Provider 3";
                validationRule25.ExpectedInnerText = "ProviderSecurity Test Provider 3";
                validationRule25.RemoveInnerTags = true;
                validationRule25.HasClosingTags = true;
                validationRule25.CollapseWhiteSpace = true;
                validationRule25.Index = -1;
                validationRule25.IgnoreCase = true;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule25.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidateHtmlTagInnerText validationRule26 = new ValidateHtmlTagInnerText();
                validationRule26.TagName = "button";
                validationRule26.AttributeName = "title";
                validationRule26.AttributeValue = "Back";
                validationRule26.ExpectedInnerText = "Back";
                validationRule26.RemoveInnerTags = true;
                validationRule26.HasClosingTags = true;
                validationRule26.CollapseWhiteSpace = true;
                validationRule26.Index = -1;
                validationRule26.IgnoreCase = true;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule26.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule27 = new ValidationRuleFindText();
                validationRule27.FindText = "id=\"TI_DeleteRecordButton\"";
                validationRule27.IgnoreCase = true;
                validationRule27.UseRegularExpression = false;
                validationRule27.PassIfTextFound = true;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule27.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule28 = new ValidationRuleFindText();
                validationRule28.FindText = "Delete</a>";
                validationRule28.IgnoreCase = true;
                validationRule28.UseRegularExpression = false;
                validationRule28.PassIfTextFound = true;
                request6.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule28.Validate);
            }
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("https://phoenixqa.careworks.ie/api/dataform/Update");
            request7.Method = "POST";
            request7.Headers.Add(new WebTestRequestHeader("Accept", "application/json, text/javascript, */*; q=0.01"));
            request7.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request7.Headers.Add(new WebTestRequestHeader("Referer", "https://phoenixqa.careworks.ie/pages/editpage.aspx?type=provider&id=50fc1b5a-3fb7-" +
                        "e811-80dc-0050560502cc&dialogdepth=1&winmode=1&dialogname=CWDataFormDialog"));
            StringHttpBody request7Body = new StringHttpBody();
            request7Body.ContentType = "application/json; charset=utf-8";
            request7Body.InsertByteOrderMark = false;
            request7Body.BodyString = ("{ \"Id\": \"50fc1b5a-3fb7-e811-80dc-0050560502cc\", \"BusinessObjectName\": \"provider\"," +
                " \"PrimaryKeyName\": \"providerid\", \"MetadataType\": \"0\", \"ParentId\": \"\", \"ParentTyp" +
                "e\": \"\", \"RelationshipId\": \"\", \"HasParentField\": \"false\", \"CultureName\": \"en-GB\"," +
                " \"IgnoreDuplicates\": false, \"Data\": \"<Record><Fields><RecordField Name=\\\"provide" +
                "rnumber\\\" Type=\\\"34\\\" Value=\\\"7\\\" PrevValue=\\\"7\\\"/><RecordField Name=\\\"name\\\" Ty" +
                "pe=\\\"11\\\" Value=\\\"Security Test Provider 3\\\" PrevValue=\\\"Security Test Provider " +
                "3\\\"/><RecordField Name=\\\"providertypeid\\\" Type=\\\"31\\\" Value=\\\"6\\\" Disp=\\\"Other\\\"" +
                " PrevValue=\\\"6\\\" PrevDisp=\\\"Other\\\"/><RecordField Name=\\\"accountnumber\\\" Type=\\\"" +
                "11\\\" Value=\\\"987654321\\\" PrevValue=\\\"987654321\\\"/><RecordField Name=\\\"parentprov" +
                "iderid\\\" Type=\\\"19\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"parentprovid" +
                "erid_cwname\\\" Type=\\\"11\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"primary" +
                "contactid\\\" Type=\\\"19\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"primaryco" +
                "ntactid_cwname\\\" Type=\\\"11\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"cont" +
                "ractleadid\\\" Type=\\\"19\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"contract" +
                "leadid_cwname\\\" Type=\\\"11\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"cqclo" +
                "cationid\\\" Type=\\\"11\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"descriptio" +
                "n\\\" Type=\\\"12\\\" Value=\\\"Provider used by the automated security tests\\\" PrevValu" +
                "e=\\\"Provider used by the automated security tests\\\"/><RecordField Name=\\\"ownerid" +
                "\\\" Type=\\\"22\\\" Value=\\\"559163dd-2c5a-e511-80c8-0050560502cc\\\" PrevValue=\\\"559163" +
                "dd-2c5a-e511-80c8-0050560502cc\\\"/><RecordField Name=\\\"ownerid_cwname\\\" Type=\\\"11" +
                "\\\" Value=\\\"CareDirectorCCIS\\\" PrevValue=\\\"CareDirectorCCIS\\\"/><RecordField Name=" +
                "\\\"mainphone\\\" Type=\\\"27\\\" Value=\\\"568\\\" PrevValue=\\\"568\\\"/><RecordField Name=\\\"o" +
                "therphone\\\" Type=\\\"27\\\" Value=\\\"435345345\\\" PrevValue=\\\"435345345\\\"/><RecordFiel" +
                "d Name=\\\"website\\\" Type=\\\"23\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"em" +
                "ail\\\" Type=\\\"4\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"qaleadid\\\" Type=" +
                "\\\"19\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"qaleadid_cwname\\\" Type=\\\"1" +
                "1\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"startdate\\\" Type=\\\"2\\\" Value=" +
                "\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"enddate\\\" Type=\\\"2\\\" Value=\\\"\\\" PrevVal" +
                "ue=\\\"\\\"/><RecordField Name=\\\"addresstypeid\\\" Type=\\\"31\\\" Value=\\\"1\\\" Disp=\\\"Prim" +
                "ary\\\" PrevValue=\\\"1\\\" PrevDisp=\\\"Primary\\\"/><RecordField Name=\\\"propertyname\\\" T" +
                "ype=\\\"11\\\" Value=\\\"PN\\\" PrevValue=\\\"PN\\\"/><RecordField Name=\\\"addressline1\\\" Typ" +
                "e=\\\"11\\\" Value=\\\"PNO\\\" PrevValue=\\\"PNO\\\"/><RecordField Name=\\\"addressline2\\\" Typ" +
                "e=\\\"11\\\" Value=\\\"ST\\\" PrevValue=\\\"ST\\\"/><RecordField Name=\\\"addressline3\\\" Type=" +
                "\\\"11\\\" Value=\\\"VL\\\" PrevValue=\\\"VL\\\"/><RecordField Name=\\\"addressline4\\\" Type=\\\"" +
                "11\\\" Value=\\\"TC\\\" PrevValue=\\\"TC\\\"/><RecordField Name=\\\"addressline5\\\" Type=\\\"11" +
                "\\\" Value=\\\"CTY\\\" PrevValue=\\\"CTY\\\"/><RecordField Name=\\\"postcode\\\" Type=\\\"11\\\" V" +
                "alue=\\\"CR0 3RL\\\" PrevValue=\\\"CR0 3RL\\\"/><RecordField Name=\\\"addresspropertytypei" +
                "d\\\" Type=\\\"19\\\" Value=\\\"0e593a36-2297-e811-80dc-005056050630\\\" PrevValue=\\\"0e593" +
                "a36-2297-e811-80dc-005056050630\\\"/><RecordField Name=\\\"addresspropertytypeid_cwn" +
                "ame\\\" Type=\\\"11\\\" Value=\\\"Other\\\" PrevValue=\\\"Other\\\"/><RecordField Name=\\\"count" +
                "ry\\\" Type=\\\"11\\\" Value=\\\"CO\\\" PrevValue=\\\"CO\\\"/><RecordField Name=\\\"addressphone" +
                "\\\" Type=\\\"27\\\" Value=\\\"87544567\\\" PrevValue=\\\"87544567\\\"/><RecordField Name=\\\"co" +
                "ntacthours\\\" Type=\\\"11\\\" Value=\\\"\\\" PrevValue=\\\"\\\"/><RecordField Name=\\\"notes\\\" " +
                "Type=\\\"12\\\" Dirty=\\\"true\\\" Value=\\\"..."
                        + (this.Context["RandomGuid"].ToString() + "\\\" PrevValue=\\\"Provider used by the automated security tests\\\"/></Fields></Record" +
                            ">\" }"));
            request7.Body = request7Body;
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High))
            {
                ValidationRuleFindText validationRule29 = new ValidationRuleFindText();
                validationRule29.FindText = "\"Success\":false";
                validationRule29.IgnoreCase = true;
                validationRule29.UseRegularExpression = false;
                validationRule29.PassIfTextFound = true;
                request7.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule29.Validate);
            }
            yield return request7;
            request7 = null;
        }
    }
}
